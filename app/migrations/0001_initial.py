# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-04-26 11:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_url', models.URLField()),
                ('type', models.SmallIntegerField(blank=True, choices=[(200, 'RECEIVED_OFFER'), (201, 'OFFER_ACCEPTED'), (202, 'OFFER_REJECTED')], null=True)),
                ('message', models.CharField(max_length=200)),
                ('is_seen', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_seen', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField()),
                ('comment', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(100, 'Open'), (101, 'Done'), (102, 'Closed')], default=100)),
                ('publish', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'Request',
                'verbose_name_plural': 'Requests',
            },
        ),
        migrations.CreateModel(
            name='RequestCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'RequestCategory',
                'verbose_name_plural': 'Request Categories',
            },
        ),
        migrations.CreateModel(
            name='RequestSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Request Sub Category',
                'verbose_name_plural': 'Request Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='SkillTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SkillTag',
                'verbose_name_plural': 'Skill Tags',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('website', models.URLField(blank=True, default=b'')),
                ('stackoverflow_account', models.URLField(blank=True, default=b'')),
                ('github_account', models.URLField(blank=True, default=b'')),
                ('twitter_account', models.URLField(blank=True, default=b'')),
                ('google_plus_account', models.URLField(blank=True, default=b'')),
                ('reputation', models.IntegerField(blank=True, default=0)),
                ('about', models.TextField(blank=True, default=b'')),
                ('location', models.CharField(blank=True, default=b'', max_length=140)),
                ('career', models.CharField(blank=True, default=b'', max_length=140)),
                ('company', models.CharField(blank=True, default=b'', max_length=140)),
                ('profileView', models.IntegerField(blank=True, default=0)),
                ('skills', models.ManyToManyField(blank=True, related_name='skills', to='app.SkillTag')),
            ],
        ),
        migrations.AddField(
            model_name='requestsubcategory',
            name='skill_tags',
            field=models.ManyToManyField(blank=True, to='app.SkillTag'),
        ),
        migrations.AddField(
            model_name='requestcategory',
            name='sub_categories',
            field=models.ManyToManyField(blank=True, to='app.RequestSubCategory'),
        ),
        migrations.AddField(
            model_name='request',
            name='collaborators',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='collaborators', to='app.SkillTag'),
        ),
        migrations.AddField(
            model_name='request',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.RequestCategory'),
        ),
        migrations.AddField(
            model_name='rating',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Request'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rated_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='offer',
            name='offer_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='offer',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Request'),
        ),
        migrations.AddField(
            model_name='notification',
            name='extra',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Offer'),
        ),
        migrations.AddField(
            model_name='notification',
            name='for_user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
